{"version":3,"file":"snackbar.js","sources":["../src/partials/js/snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", function (event) {\n  event.preventDefault();\n\n  const delayInput = document.querySelector(\"[name='delay']\");\n  const stateInputs = document.querySelectorAll(\"[name='state']\");\n\n  const delay = parseInt(delayInput.value);\n\n  let state;\n  stateInputs.forEach(input => {\n    if (input.checked) {\n      state = input.value;\n    }\n  });\n\n  const notificationPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === \"fulfilled\") {\n        resolve(delay)\n      } else if (state === \"rejected\") {\n        reject(delay)\n      }\n    }, delay);\n  })\n\n  console.log(state);\n\n  notificationPromise\n    .then(delay => {\n      iziToast.success({\n        title: \"✅ Fulfilled promise\",\n        message: `Fulfilled promise in ${delay}ms`,\n      })\n    })\n    .catch(delay => {\n      iziToast.error({\n        title: \"❌ Rejected promise\",\n        message: `Rejected promise in ${delay}ms`\n      })\n    })\n})"],"names":["form","event","delayInput","stateInputs","delay","state","input","notificationPromise","resolve","reject","iziToast"],"mappings":"oFAIA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAU,SAAUC,EAAO,CAC/CA,EAAM,eAAgB,EAEtB,MAAMC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAc,SAAS,iBAAiB,gBAAgB,EAExDC,EAAQ,SAASF,EAAW,KAAK,EAEvC,IAAIG,EACJF,EAAY,QAAQG,GAAS,CACvBA,EAAM,UACRD,EAAQC,EAAM,MAEpB,CAAG,EAED,MAAMC,EAAsB,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC3D,WAAW,IAAM,CACXJ,IAAU,YACZG,EAAQJ,CAAK,EACJC,IAAU,YACnBI,EAAOL,CAAK,CAEf,EAAEA,CAAK,CACT,CAAA,EAED,QAAQ,IAAIC,CAAK,EAEjBE,EACG,KAAKH,GAAS,CACbM,EAAS,QAAQ,CACf,MAAO,sBACP,QAAS,wBAAwBN,CAAK,IACvC,CAAA,CACF,CAAA,EACA,MAAMA,GAAS,CACdM,EAAS,MAAM,CACb,MAAO,qBACP,QAAS,uBAAuBN,CAAK,IACtC,CAAA,CACF,CAAA,CACL,CAAC"}